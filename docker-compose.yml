---
version: "3.8"

x-app: &app
  image: my_factory_bot
  build:
    context: .
    dockerfile: Dockerfile
  tmpfs:
    - /tmp
  environment:
    RAILS_LOG_TO_STDOUT: enabled
    REDIS_URL: redis://@redis:6379/1
    DATABASE_URL: postgres://my_factory_bot@postgres:5432/
    WEBPACKER_DEV_SERVER_HOST: webpacker
    BOOTSNAP_CACHE_DIR: /usr/src/bootsnap
  volumes:
    - .:/usr/src/app:cached
    - bundler:/usr/local/bundle:delegated
    - bootsnap_cache:/usr/src/bootsnap:delegated
    - rails_cache:/usr/src/app/tmp/cache:delegated
    - packs:/usr/src/app/public/packs:delegated
    - node_modules:/usr/src/app/node_modules:delegated
    - storage:/usr/src/app/storage:delegated
    - ~/.ssh:/root/.ssh
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_started

services:
  postgres:
    image: postgres:13.1-alpine
    volumes:
      - postgresql:/var/lib/postgresql/data:delegated
      - ./init.sql:/data/application/init.sql
    ports:
      - "127.0.0.1:5434:5432"
    environment:
      PSQL_HISTFILE: /usr/src/app/log/.psql_history
      POSTGRES_USER: my_factory_bot
      POSTGRES_HOST_AUTH_METHOD: trust
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U my_factory_bot"]
      interval: 10s
      timeout: 2s
      retries: 10
    logging:
      driver: none

  redis:
    image: redis:4.0.14-alpine
    volumes:
      - redis:/data:delegated
    ports:
      - "127.0.0.1:6380:6379"
    restart: on-failure
    logging:
      driver: none

  web:
    <<: *app
    command: bash -c "rm -rf /usr/src/app/tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    ports:
      - "127.0.0.1:3000:3000"

  webpacker:
    <<: *app
    command: ./bin/webpack-dev-server
    environment:
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0
    ports:
      - "127.0.0.1:3035:3035"

volumes:
  postgresql:
  redis:
  bundler:
  bootsnap_cache:
  rails_cache:
  packs:
  node_modules:
  storage:
